      - name: 清理指定工作流及本工作流运行记录
        env:
          REPO: ${{ github.repository }}
          COUNT: ${{ inputs.count }}
          DELETE_FAILED: ${{ inputs.delete_failed }}
          DELETE_SUCCESS: ${{ inputs.delete_success }}
          DELETE_CANCELLED: ${{ inputs.delete_cancelled }}
          REVERSE_ORDER: ${{ inputs.reverse_order }}
          WORKFLOW_NAME: ${{ inputs.workflow_name }}
          CURRENT_RUN_ID: ${{ github.run_id }}
        run: |
          set -euo pipefail
          set -x  # 开启调试，打印每一步命令（失败后去日志里找具体行）

          # ========== 调试：先检查 gh 和 jq 是否可用 ==========
          gh --version || { echo "gh 未安装"; exit 1; }
          jq --version || { echo "jq 未安装"; exit 1; }
          gh auth status || { echo "gh 未认证"; exit 1; }  # 验证 token 有效性

          # ========== 1. 获取目标工作流 ID（关键步骤，重点调试） ==========
          echo "开始获取工作流 ID：$WORKFLOW_NAME"
          WORKFLOW_ID=$(gh api "repos/$REPO/actions/workflows" \
            | jq -r --arg name "$WORKFLOW_NAME" '.workflows[] | select(.name == $name) | .id' \
            || { echo "jq 解析工作流 ID 失败！API 返回："; cat <<< "$(gh api "repos/$REPO/actions/workflows")" ; exit 1; })
          echo "WORKFLOW_ID: $WORKFLOW_ID"
          if [[ -z "$WORKFLOW_ID" ]]; then
            echo "错误：未找到工作流 \"$WORKFLOW_NAME\"，检查名称是否正确！"
            exit 1
          fi

          # ========== 2. 分页获取运行记录（捕获 API 错误） ==========
          PER_PAGE=100
          PAGE=1
          MATCHED_RUNS="[]"
          while true; do
            echo "获取第 $PAGE 页运行记录..."
            RESP=$(gh api "repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?per_page=$PER_PAGE&page=$PAGE" \
              || { echo "API 请求失败（第 $PAGE 页）"; exit 1; })
            RUNS=$(echo "$RESP" | jq '.workflow_runs' \
              || { echo "jq 解析运行记录失败！响应：$RESP"; exit 1; })
            COUNT_THIS_PAGE=$(echo "$RUNS" | jq 'length' \
              || { echo "jq 统计页数失败！响应：$RUNS"; exit 1; })

            if [[ $COUNT_THIS_PAGE -eq 0 ]]; then
              echo "第 $PAGE 页无数据，停止分页。"
              break
            fi

            MATCHED_RUNS=$(jq -s 'add' <(echo "$MATCHED_RUNS") <(echo "$RUNS") \
              || { echo "jq 合并数组失败！"; exit 1; })
            PAGE=$((PAGE + 1))
          done
          TOTAL_RUNS=$(echo "$MATCHED_RUNS" | jq 'length' \
            || { echo "jq 统计总记录数失败！"; exit 1; })
          echo "共获取到 $TOTAL_RUNS 条运行记录"

          # ========== 后续逻辑保持不变，若前面通过则大概率能运行 ==========
          # ...（原排序、删除逻辑，若前面调试通过，此处一般不会错）...
